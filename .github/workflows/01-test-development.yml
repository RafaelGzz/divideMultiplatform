name: ðŸ§ª Test Development

on:
  push:
    branches: [ development ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: ðŸ“¥ Checkout code
      uses: actions/checkout@v4
      
    - name: â˜• Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: ðŸ“¦ Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: ðŸ”‘ Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: ðŸ“± Create google-services.json
      run: |
        if [ -n "${{ secrets.GOOGLE_SERVICES_JSON }}" ]; then
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 -d > composeApp/google-services.json
        else
          # Crear archivo dummy para tests
          cat > composeApp/google-services.json << 'EOF'
        {
          "project_info": {
            "project_number": "123456789",
            "project_id": "dummy-project"
          },
          "client": [
            {
              "client_info": {
                "mobilesdk_app_id": "1:123456789:android:dummy",
                "android_client_info": {
                  "package_name": "com.ragl.divide"
                }
              },
              "oauth_client": [],
              "api_key": [
                {
                  "current_key": "dummy-key"
                }
              ],
              "services": {
                "appinvite_service": {
                  "other_platform_oauth_client": []
                }
              }
            }
          ],
          "configuration_version": "1"
        }
        EOF
        fi
      
    - name: ðŸ”¨ Build debug
      run: |
        echo "Building debug version..."
        ./gradlew assembleDebug --stacktrace
      
    - name: ðŸ§ª Run unit tests
      run: |
        echo "Running unit tests..."
        ./gradlew test testDebugUnitTest --continue --stacktrace
      
    - name: ðŸ“Š Generate test report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Test Results
        path: '**/build/test-results/**/TEST-*.xml'
        reporter: java-junit
        fail-on-error: false
        
    - name: ðŸ“¤ Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ github.sha }}
        path: |
          **/build/test-results/
          **/build/reports/tests/
        retention-days: 7 